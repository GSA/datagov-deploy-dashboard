---
- name: Create log dir
  file: path=/var/log/dashboard state=directory owner={{ dashboard_user }} group={{ dashboard_user }} mode=0755

- name: Check whether "{{ project_source_new_code_path }}" exists
  stat: path="{{ project_source_new_code_path }}"
  register: p

- name: Create rollback code
  command: mv "{{ project_source_new_code_path }}" "{{ project_source_rollback_path }}"
  when: p.stat.isdir is defined and p.stat.isdir

- name: Symlink current dir with rollback code
  file:
    src: "{{ project_source_rollback_path }}"
    path: "{{ current_source_symlink }}"
    state: link
  when: p.stat.isdir is defined and p.stat.isdir

- name: Create "new" directory
  file: path={{ project_source_new_code_path }} state=directory owner={{ dashboard_user }} group={{ dashboard_user }} mode=0755

- name: Clone project files to {{ project_source_new_code_path }}
  git:
    repo: "{{ project_git_repo }}"
    dest: "{{ project_source_new_code_path }}"
    version: "{{ project_git_version }}"
    umask: "0022"
    force: true
    recursive: no
  become: true
  become_user: "{{ dashboard_user }}"

- name: Composer install Dashboard
  composer:
    command: install
    arguments: "--ansi --no-dev --no-interaction --optimize-autoloader --no-scripts"
    working_dir: "{{ project_source_new_code_path }}"
  environment:
    COMPOSER_DISCARD_CHANGES: "true"
  become: true
  become_user: "{{ dashboard_user }}"

- name: Adding .env
  template:
    src: "env.j2"
    dest: "{{ project_source_new_code_path }}/.env"
    owner: "{{ dashboard_user }}"
    group: www-data
    mode: "0640"

- name: Symlink current dir with new code
  file:
    src: "{{ project_source_new_code_path }}"
    path: "{{ current_source_symlink }}"
    state: link

- name: Remove invalid supervisor conf
  file: path=/etc/supervisor/conf.d/dashboard state=absent

- name: Configure supervisor tasks
  template: src=etc_supervisor_conf.d_dashboard.conf.j2 dest=/etc/supervisor/conf.d/dashboard.conf owner=root group=root mode=0644
  notify: supervisor reload

- name: Enable campaign status cfo-act download cron
  cron: >-
    cron_file=dashboard
    name="campaign status cfo-act download cron job"
    user=root
    minute=15
    hour=4
    job="supervisorctl start dashboard-campaign-status-download > /dev/null"
    disabled={{ not crons_enabled }}
    state=present

- name: Enable campaign status cfo-act full-scan cron
  cron: >-
    cron_file=dashboard
    name="campaign status cfo-act full-scan cron job"
    user=root
    minute=30
    hour=4
    job="supervisorctl start dashboard-campaign-status-full-scan > /dev/null"
    disabled={{ not crons_enabled }}
    state=present

- name: Enable campaign status long-running full-scan cron
  cron: >-
    cron_file=dashboard
    name="campaign status long-running full-scan cron job"
    user=root
    minute=30
    hour=4
    day=1
    month=1,4,7,10
    job="supervisorctl start dashboard-campaign-status-long-running > /dev/null"
    disabled={{ not crons_enabled }}
    state=present

- name: Start campaign status long-running full-scan on reboot
  cron: >-
    cron_file=dashboard
    name="campaign status long-running full-scan cron job"
    user=root
    special_time=reboot
    job="supervisorctl start dashboard-campaign-status-long-running > /dev/null"
    disabled={{ not crons_enabled }}
    state=present
    